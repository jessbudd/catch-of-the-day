{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","action","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","i","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBindingP","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.b1e17c50.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers.js\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  goToStore = event => {\n    event.preventDefault();\n    const storeName = this.myInput.current.value;\n    this.props.history.push(`./store/${storeName}`);\n  };\n  render() {\n    return (\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please pick a store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"store name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit store</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// stateless component ES6\n// implicit return\nconst Header = (props, i) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        of\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\n// stateless component ES6\n// implicit return\n// multiple props split outs\n// const Header = ({tagline, age}) => (\n//     <header className=\"top\">\n//       <h1>\n//         Catch\n//         <span className=\"ofThe\">\n//           of\n//           <span className=\"of\">of</span>\n//           <span className=\"the\">the</span>\n//         </span>\n//         day\n//       </h1>\n//       <h3 className=\"tagline\">\n//         <span>{tagline}{age}</span>\n//       </h3>\n//     </header>\n//   );\n\n// stateless component regular JS\n// function Header(props) {\n//   return (\n//     <header className=\"top\">\n//       <h1>\n//         Catch\n//         <span className=\"ofThe\">\n//           of\n//           <span className=\"of\">of</span>\n//           <span className=\"the\">the</span>\n//         </span>\n//         day\n//       </h1>\n//       <h3 className=\"tagline\">\n//         <span>{props.tagline}</span>\n//       </h3>\n//     </header>\n//   );\n// }\n\n// full component\n// class Header extends React.Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>\n//           Catch\n//           <span className=\"ofThe\">\n//             of\n//             <span className=\"of\">of</span>\n//             <span className=\"the\">the</span>\n//           </span>\n//           day\n//         </h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     );\n//   }\n// }\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    if (!fish) return null;\n    const isAvailable = fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n\n    if (!isAvailable) {\n      return (\n        <li key={key}>Sorry {fish ? fish.name : \"fish\"} is not available</li>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition {...transitionOptions}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              Remove fish\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total: <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = e => {\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <div className=\"AddFishForm\">\n        <h2>AddFishForm!</h2>\n        <form className=\"fish-edit\" onSubmit={this.createFish}>\n          <input\n            name=\"name\"\n            ref={this.nameRef}\n            type=\"text\"\n            placeholder=\"Name\"\n          />\n          <input\n            name=\"price\"\n            ref={this.priceRef}\n            type=\"text\"\n            placeholder=\"Price\"\n          />\n          <select name=\"status\" ref={this.statusRef}>\n            <option value=\"available\">Fresh</option>\n            <option value=\"unavailable\">Sold Out</option>\n          </select>\n          <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n          <input\n            name=\"image\"\n            ref={this.imageRef}\n            type=\"text\"\n            placeholder=\"Image\"\n          />\n          <button type=\"submit\">+ Add Fish</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n\n  handleChange = event => {\n    // update that fish\n    // 1. take a copy of state\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n    // 2. get new data\n\n    // 3. update state\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n        <textarea\n          type=\"text\"\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(`Github`)}>\n      Login with Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(`Facebook`)}>\n      Login with Facebook\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(`Twitter`)}>\n      Login with Twitter\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyC3nDH-SWzR544GibWKR9UY7dwVARwvmz0\",\n  authDomain: \"cotd-539a4.firebaseapp.com\",\n  databaseURL: \"https://cotd-539a4-default-rtdb.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export\nexport { firebaseApp };\n\n// default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // look up current store owner in firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    console.log(authData);\n    // claim store if no owner\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // set state of inventory component to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n    // alert(provider);\n  };\n\n  logout = async () => {\n    console.log(`logging out!`);\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log out</button>;\n\n    // check if logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // check if not owner of this store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner.</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // they must be owner, so render inventory\n    return (\n      <div className=\"inventory\">\n        <h2>inventory!</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load sample fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n\n  render() {\n    const { image, name, desc, price, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={this.props.details.name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? `Add to cart` : `Sold out`}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  // sync order to firebase db\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  // clean up to avoid memory leaks\n  componentWillUnmount() {\n    base.removeBindingP(this.ref);\n  }\n  addFish = fish => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. add our new fish to that variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. set the new fishes object to state\n    this.setState({\n      fishes: fishes // fishes the state is set to fishes the variable\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // take a copy of state\n    const fishes = { ...this.state.fishes };\n    // update that copy of state\n    fishes[key] = updatedFish;\n    // set state\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  deleteFish = key => {\n    // take copy of state\n    const fishes = { ...this.state.fishes };\n    // update that copy of state (remove fish)\n    // firebase requires set to null\n    fishes[key] = null;\n    // set state\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  removeFromOrder = key => {\n    // take copy of state\n    const order = { ...this.state.order };\n    // update that copy of state (remove fish)\n    delete order[key];\n    // set state\n    this.setState({\n      order: order\n    });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes\n    });\n  };\n\n  addToOrder = key => {\n    const order = { ...this.state.order };\n    order[key] = order[key] + 1 || 1;\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = props => (\n  <div>\n    <h2> Not Found</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = props => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}